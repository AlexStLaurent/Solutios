
@{

    ViewData["Title"] = "Projet Archivé";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    List<string> tendance = ViewData["tendance"] as List<string>;
}

<h2>ProjetArchive</h2>

<div class="row">
    <!-- carte de Complétion -->
    <div class="col-xl-4 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">Complétion</div>
                        <div class="row no-gutters align-items-center">
                            <div class="col-auto">
                                <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800">100%</div>
                            </div>
                            <div class="col">
                                Complété
                            </div>
                        </div>
                    </div>
                    <div class="col-auto">
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- carte de Marge de profit Projectée -->
    <div class="col-xl-4 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Marge de profit Finale</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">$ 28,299.81</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- carte de profit soumit -->
    <div class="col-xl-4 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Marge de profit Soumis</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">$ 18,500</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-file-invoice-dollar fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <!-- carte de notifications liées au projet -->
    <div hidden class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-warning shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-3 ">
                        <div class="h6 font-weight-bold text-warning text-uppercase mb-1">Ajouter une projection</div>
                    </div>
                    <div class="col-auto">
                       
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- fin de infos rapids -->
<!--******************************************************************************************************-->


<div class="row">
    <!--******************************************************************************************************-->
    <!--Table de la soumission -->
    <!--******************************************************************************************************-->
    @{
        Html.RenderPartial("Partiel/_partielSoumissionArchive");
    }

    <!--******************************************************************************************************-->
    <!--Table de la projection -->
    <!--******************************************************************************************************-->
    @*@{
            Html.RenderPartial("Partiel/_partielprojection", ViewData["Projection"]);
        }*@
</div><!--fin de la rangé du milieu-->

<div class="row">
    <!--******************************************************************************************************-->
    <!--Graphique a bandes-->
    <!--******************************************************************************************************-->
    <div class="col-xl-6">
        <!--table des projets-->
        <div>

            <div class="card shadow mb-4">
                <div class="card-header p-2 ">
                    <h6 class="m-0 font-weight-bold text-primary">Soumission vs Projection</h6>
                </div>
                <div class="card-body py-2">
                    <div class="chart-bar" style="height:300px">
                        <canvas id="myBarChart"></canvas>
                    </div>
                </div>

            </div>

        </div>

        <!--************************fin de graphique a bandes**************************************************-->
    </div>

    <!--******************************************************************************************************-->
    <!--Tableau de bord-->
    <!--******************************************************************************************************-->
    <div class="col-xl-6">
        <div>

            <div class="card shadow mb-4">
                <div class="card-header p-2 ">
                    <h6 class="m-0 font-weight-bold text-primary">Tendance</h6>
                </div>
                <div class="card-body py-2">
                    <div class="chart-area" style="height:300px">
                        <canvas id="myAreaChart"></canvas>
                    </div>
                </div>

            </div>

        </div>

        <!--************************fin de graphique a bandes**************************************************-->
    </div>
</div>



<!-- Page level plugins -->
<script src="~/vendor/chart.js/Chart.min.js"></script>
<script>
Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
Chart.defaults.global.defaultFontColor = '#858796';

function number_format(number, decimals, dec_point, thousands_sep) {
  // *     example: number_format(1234.56, 2, ',', ' ');
  // *     return: '1 234,56'
  number = (number + '').replace(',', '').replace(' ', '');
  var n = !isFinite(+number) ? 0 : +number,
    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
    s = '',
    toFixedFix = function(n, prec) {
      var k = Math.pow(10, prec);
      return '' + Math.round(n * k) / k;
    };
  // Fix for IE parseFloat(0.55).toFixed(0) = 0;
  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
  if (s[0].length > 3) {
    s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
  }
  if ((s[1] || '').length < prec) {
    s[1] = s[1] || '';
    s[1] += new Array(prec - s[1].length + 1).join('0');
  }
  return s.join(dec);
}

// Area Chart Example
var ctxx = document.getElementById("myAreaChart");

var myLineChart = new Chart(ctxx, {
	type: 'line',
	data: {
        labels: @Html.Raw((ViewData["date"])),
            datasets: [
            @foreach(var item in tendance)
            {
            <text>
            {
            label: "Tendance",
			lineTension: 0.3,
			backgroundColor: "rgba(78, 115, 223, 0.05)",
			borderColor: "rgba(78, 115, 223, 1)",
			pointRadius: 3,
			pointBackgroundColor: "rgba(78, 115, 223, 1)",
			pointBorderColor: "rgba(78, 115, 223, 1)",
			pointHoverRadius: 3,
			pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
			pointHoverBorderColor: "rgba(78, 115, 223, 1)",
			pointHitRadius: 10,
            pointBorderWidth: 2,
                data: @item,
            },
            </text>
            }
		],
	},
	options: {
		maintainAspectRatio: false,
		layout: {
			padding: {
				left: 10,
				right: 25,
				top: 25,
				bottom: 0
			}
		},
		scales: {
			xAxes: [{
				time: {
					unit: 'date'
				},
				gridLines: {
					display: false,
					drawBorder: false
				},
				ticks: {
					maxTicksLimit: 7
				}
			}],
			yAxes: [{
				ticks: {
					maxTicksLimit: 5,
                    padding: 10,
                    min:0,
					// Include a dollar sign in the ticks
					callback: function (value, index, values) {
						return '$' + number_format(value);
                    }
				},
				gridLines: {
					color: "rgb(234, 236, 244)",
					zeroLineColor: "rgb(234, 236, 244)",
					drawBorder: false,
					borderDash: [2],
					zeroLineBorderDash: [2]
				}
			}],
		},
		legend: {
			display: false
		},
		tooltips: {
			backgroundColor: "rgb(255,255,255)",
			bodyFontColor: "#858796",
			titleMarginBottom: 10,
			titleFontColor: '#6e707e',
			titleFontSize: 14,
			borderColor: '#dddfeb',
			borderWidth: 1,
			xPadding: 15,
			yPadding: 15,
			displayColors: false,
			intersect: false,
			mode: 'index',
			caretPadding: 10,
			callbacks: {
				label: function (tooltipItem, chart) {
					var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
					return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
				}
			}
		}
	}
});

</script>
<script>
    // Set new default font family and font color to mimic Bootstrap's default styling
Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
Chart.defaults.global.defaultFontColor = '#858796';

function number_format(number, decimals, dec_point, thousands_sep) {
	// *     example: number_format(1234.56, 2, ',', ' ');
	// *     return: '1 234,56'
	number = (number + '').replace(',', '').replace(' ', '');
	var n = !isFinite(+number) ? 0 : +number,
		prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
		sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
		dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
		s = '',
		toFixedFix = function (n, prec) {
			var k = Math.pow(10, prec);
			return '' + Math.round(n * k) / k;
		};
	// Fix for IE parseFloat(0.55).toFixed(0) = 0;
	s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
	if (s[0].length > 3) {
		s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
	}
	if ((s[1] || '').length < prec) {
		s[1] = s[1] || '';
		s[1] += new Array(prec - s[1].length + 1).join('0');
	}
	return s.join(dec);
}

// Valeurs
    var ctx = document.getElementById("myBarChart");

    var Nomdepense = @Html.Raw((ViewData["Nomdepense"]));
    var myBarChart = new Chart(ctx, {
	type: 'bar',
    data: {
        labels: Nomdepense,//nom des colonnes
		datasets: [{
			label: "Soumission",
			backgroundColor: "#424242",
			hoverBackgroundColor: "#666666",
            borderColor: "#4e73df",
            data: @Html.Raw((ViewData["soumission"])),//valeurs des colonnes
        }, {
			label: "Projection",
			backgroundColor: "#319163",
			hoverBackgroundColor: "#40b97e",
                borderColor: "#4e73df",
                data: @Html.Raw((ViewData["graphbar"]))//valeurs des colonnes
		}
		],
	},
	options: {
		maintainAspectRatio: false,
		layout: {
			//distances de la table comparé au "container"
			padding: {
				left: 10,
				right: 25,
				top: 25,
				bottom: 0
			}
		},
		scales: {
			xAxes: [{
				time: {
					unit: 'name'
				},
				gridLines: {
					display: false,
					drawBorder: false
				},
				ticks: {
					maxTicksLimit: 6
				},
				maxBarThickness: 25,
			}],
			yAxes: [{
				//chiffres sur le coté
				ticks: {
					min: 0,
					maxTicksLimit: 10,
					padding: 10,
					// Include a dollar sign in the ticks
					callback: function (value, index, values) {
						return '$' + number_format(value);
					}
				},
				gridLines: {
					color: "rgb(234, 236, 244)",
					zeroLineColor: "rgb(234, 236, 244)",
					drawBorder: false,
					borderDash: [2],
					zeroLineBorderDash: [2]
				}
			}],
		},
		legend: {
			display: false
		},
		//affichage des informations
		tooltips: {
			titleMarginBottom: 10,
			titleFontColor: '#6e707e',
			titleFontSize: 14,
			backgroundColor: "rgb(255,255,255)",
			bodyFontColor: "#858796",
			borderColor: '#dddfeb',
			borderWidth: 1,
			xPadding: 15,
			yPadding: 15,
			displayColors: false,
			caretPadding: 10,
			callbacks: {
				label: function (tooltipItem, chart) {
					var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
					return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
				}
			}
		},
	}
});

</script>